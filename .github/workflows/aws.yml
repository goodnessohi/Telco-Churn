name: Deploy to AWS ECS

on:
  push:
    branches: [ "main" ]

env:
  AWS_REGION: eu-north-1   # Replace with your preferred region
  ECR_REPOSITORY: telco-churn  # Replace with your ECR repository name
  ECS_SERVICE: Telco-Churn  # Replace with your ECS service name
  ECS_CLUSTER: Telco-Churn  # Replace with your ECS cluster name
  ECS_TASK_DEFINITION: .aws/ecs-task-definition.json  # Path to your task definition file
  CONTAINER_NAME: Telco-Dockers  # Replace with your container name
  IMAGE_TAG: latest  # Use the tag of the existing image

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: ${{ env.ECS_TASK_DEFINITION }}
          container-name: ${{ env.CONTAINER_NAME }}
          image: 767397827719.dkr.ecr.eu-north-1.amazonaws.com/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-service@v1
        with:
          cluster: ${{ env.ECS_CLUSTER }}
          service: ${{ env.ECS_SERVICE }}
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          wait-for-service-stability: true
